@page "/inventario"
@rendermode InteractiveServer
@inject NavigationManager _navigator;
@inject RepositorioInventario _repositorio;
@inject RepositorioProductos _repositorioProductos;

<h3>InventarioIndex</h3>

@if (_inventarios == null)
{
    <p>Cargando...</p>
}

else if (_inventarios.Count == 0)
{
    <p>No hay inventarios</p>
}

else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id Inventario</th>
                <th>Producto</th>
                <th>Cantidad</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (Inventario inventario in _inventarios)
            {
                <tr>
                    <td>@inventario.Id</td>
                    <td>@ObtenerNombreProducto(inventario.ProductoId)</td>
                    <td>@inventario.Cantidad</td>
                    <td>
                        <button class="btn btn-primary" @onclick="()=>Editar(inventario.Id)">Editar</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Inventario>? _inventarios;
    private List<Producto>? _productos;

    protected override async Task OnInitializedAsync()
    {
        _inventarios = await _repositorio.GetAll();
        _productos = await _repositorioProductos.GetAll();
    }

    private string ObtenerNombreProducto(int id)
    {
        if (_productos == null)
        {
            return "Productos no cargados";
        }

        var producto = _productos.FirstOrDefault(p => p.Id == id);
        return producto != null ? producto.Nombre : "Producto no encontrado";
    }

    private void Editar(int id)
    {
        _navigator.NavigateTo($"inventario/editar/{id}");
    }

    }
