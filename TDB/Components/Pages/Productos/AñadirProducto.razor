@page "/productos/nuevo"
@rendermode InteractiveServer
@inject NavigationManager _navigator;
@inject IRepositorioProductos _repositorio;

<h3>Añadir Producto</h3>

<EditForm Model="@producto" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="nombre">Nombre</label>
        <InputText class="form-control" id="nombre" @bind-Value="producto.Nombre" />
        <ValidationMessage For="@(() => producto.Nombre)" />
    </div>
    <div class="form-group">
        <label for="descripcion">Descripción</label>
        <InputText class="form-control" id="descripcion" @bind-Value="producto.Descripcion" />
        <ValidationMessage For="@(() => producto.Descripcion)" />
    </div>
    <div class="form-group">
        <label for="precio">Precio</label>
        <InputNumber class="form-control" id="precio" @bind-Value="producto.Precio" />
        <ValidationMessage For="@(() => producto.Precio)" />
    </div>
    <div class="form-group">
        <label for="categoria">Categoría</label>
        <InputText class="form-control" id="categoria" @bind-Value="producto.Categoria" />
        <ValidationMessage For="@(() => producto.Categoria)" />
    </div>

    <button type="submit" class="btn btn-primary">Guardar</button>
</EditForm>

@code {
    private Producto producto = new Producto();

    private async Task Guardar()
    {
        try
        {
            await _repositorio.Add(producto);
            _navigator.NavigateTo("/productos");
        }
        catch (Exception)
        {
            _navigator.NavigateTo("/error");
        }
    }
}
